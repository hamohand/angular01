services:
  # Le nom du service est maintenant défini par la variable
  ${SERVICE_NAME}:
    build: .
    networks:
      - default # Réseau interne au projet
      - webproxy # Réseau partagé pour communiquer avec Traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=webproxy"

      # Le nom du routeur utilise la variable SERVICE_NAME
      # La règle de routage utilise les variables de domaine
      - "traefik.http.routers.${SERVICE_NAME}.rule=Host(`${DOMAIN_NAME}`) || Host(`${WWW_DOMAIN_NAME}`)"
      - "traefik.http.routers.${SERVICE_NAME}.entrypoints=websecure"
      - "traefik.http.routers.${SERVICE_NAME}.tls=true"
      - "traefik.http.routers.${SERVICE_NAME}.tls.certresolver=le"

      # Le service Traefik utilise aussi la variable
      - "traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=80"

      # Idem pour le routeur de redirection HTTP -> HTTPS
      - "traefik.http.routers.${SERVICE_NAME}-http.rule=Host(`${DOMAIN_NAME}`) || Host(`${WWW_DOMAIN_NAME}`)"
      - "traefik.http.routers.${SERVICE_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${SERVICE_NAME}-http.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"

networks:
  webproxy:
    external: true
